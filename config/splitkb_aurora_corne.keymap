/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        umlaut_a: umlaut_a {
            label = "umlaut_a";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp A>;
        };
        
        umlaut_o: umlaut_o {
            label = "umlaut_o";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp O>;
        };
        
        umlaut_u: umlaut_u {
            label = "umlaut_u";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp U>;
        };

        umlaut_a_upper: umlaut_a_upper {
            label = "umlaut_a_upper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp LS(A)>;
        };
        
        umlaut_o_upper: umlaut_o_upper {
            label = "umlaut_o_upper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp LS(O)>;
        };
        
        umlaut_u_upper: umlaut_u_upper {
            label = "umlaut_u_upper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp LS(U)>;
        };
        
        umlaut_ss: umlaut_ss {
            label = "umlaut_ss";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp S>;
        };
    };

    behaviors {
        umlaut_a_mm: umlaut_a_mm {
            compatible = "zmk,behavior-mod-morph";
            label = "UMLAUT_A_MM";
            #binding-cells = <0>;
            bindings = <&umlaut_a>, <&umlaut_a_upper>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        umlaut_o_mm: umlaut_o_mm {
            compatible = "zmk,behavior-mod-morph";
            label = "UMLAUT_O_MM";
            #binding-cells = <0>;
            bindings = <&umlaut_o>, <&umlaut_o_upper>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        umlaut_u_mm: umlaut_u_mm {
            compatible = "zmk,behavior-mod-morph";
            label = "UMLAUT_U_MM";
            #binding-cells = <0>;
            bindings = <&umlaut_u>, <&umlaut_u_upper>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            display-name = "Base";
        // -----------------------------------------------------------------------------------------
        //     | ESC  |  Q  |  W  |  E  |  R  |  T  |               |  Z  |  U   |  I      |  O   |  P      | BKSP         |
        //     | CTRL  |  A  |  S  |  D  |  F  |  G  |               |  H  |  J   |  K      |  L   |  ;      | SINGLE QUOTE |
        //     | SHFT  |  Y  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,      |  .   |  /      | SHIFT        |
        //                        | GUI | LWR | SPC |                | ENT | RSE  | ALT |
            bindings = <
               &kp ESC   &kp Q &kp W &kp E &kp R &kp T                 &kp Z &kp U  &kp I     &kp O   &kp P    &kp BSPC
               &kp LCTRL &kp A &kp S &kp D &kp F &kp G                 &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT 
               &kp LSHFT &kp Y &kp X &kp C &kp V &kp B                 &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
                                      &kp LCMD &lt 1 TAB &lt 3 SPACE   &kp RET &mo 2 &kp RALT
            >;
        };
        
        lower_layer {
            display-name = "Numbers";
        // -----------------------------------------------------------------------------------------
        //     |  TAB     |  1      |  2      |  3      |  4      |  5          |       |  6      |  7      |  8      |  9      |  0      |       |
        //     | CTRL     | C_PREV  | C_PP    | C_PP    | C_NEXT  | C_VOL_UP    |       | LFT     | DWN     |  UP     | RGT     |  PG_UP  |       |
        //     | SHFT     | S_OFF   |  LCLK   |  MCLK   |  RCLK   |   C_VOL_DN  |       |         |         |         |   |  PG_DN  | TOG3  |
        //                                    | GUI     |         | SPC         |       | ENT     |         | ALT     |
            bindings = <
               &kp TAB   &kp N1      &kp N2    &kp N3    &kp N4     &kp N5                &kp N6    &kp N7    &kp N8     &kp N9    &kp N0     &trans
               &kp LCTRL &kp C_PREV  &kp C_PP  &kp C_PP  &kp C_NEXT &kp C_VOL_UP          &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT &kp PG_UP  &kp HOME
               &kp LSHFT &trans      &trans    &trans    &trans     &kp C_VOL_DN          &trans    &trans    &trans     &trans    &kp PG_DN &kp END
                                  	           &kp LGUI  &trans     &kp SPACE             &kp RET   &trans    &kp RALT
            >;
        };
        
        
        raise_layer {
            display-name = "Legend";
        // -----------------------------------------------------------------------------------------
        //     |  TAB     |  !          |  @      |  #          |  $          |  %      |       |    ^    |    &   |      *        |    (    |    )   | DEL |
        //     | BTCLR    | BT1         | BT2     | BT3         | BT4         | BT5     |       |    -         =   |      [        |    ]    |  \     |  `   |
        //     | CAPS_WORD|             |         |             |             |         |       |    _    |    +   |      {        |    }    |   "|"  |  ~   |
        //                                        | GUI         |             | SPC     |       |   ENT   |         |    ALT       |
            bindings = <
               &kp TAB    &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT         &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
               &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
               &caps_word &trans       &trans       &trans       &trans       &trans            &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                            	                   &kp LGUI      &trans       &kp SPACE         &kp RET   &trans    &kp RALT
            >;
        };
        
        special_layer {
            display-name = "Special";
        // -----------------------------------------------------------------------------------------
        // |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |
        // |     |  ä  |  ß  |     |     |     |     |  ü  |     |  ö  |     |     |
        // |     |     |     |     |     |     |     |     |     |     |     |     |
        //                   |     |     |     |     |     |     |     |
            bindings = <
            &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
            &none &none &none &none &none &none &none &umlaut_u_mm &none &umlaut_o_mm &none &none
            &none &umlaut_a_mm &umlaut_ss &none &none &none &none &none &none &none &none &none
                             &none &none &none &none &none &none
                >;
        };
    };
};
